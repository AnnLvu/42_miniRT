function lighting(figure, ambient, light, point, eyev, normalv)
	# compute the ambient contribution
	ambient_lignt ← ambient.color * ambient.intensity
	ambient_figure_color ← ambient_lignt * figure.color

	# light_dot_normal represents the cosine of the angle between the
	# light vector and the normal vector. A negative number means the
	# light is on the other side of the surface.
	lightv ← normalize(light.position - point)
	light_dot_normal ← dot(lightv, normalv)

	if light_dot_normal < 0
		diffuse_figure_color ← black_color
	else
		# compute the diffuse contribution
		diffuse_figure_color ← light.color * light.intensity * figure.color * light_dot_normal
	end if

	# Add the two contributions together to get the final shading
	return ambient_figure_color + diffuse_figure_color
end function
